<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2017 Pascal

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.github.pascalgn</groupId>
    <artifactId>dbmigration</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>dbmigration</name>
    <description>A tool to migrate data from one SQL database to another</description>
    <url>https://github.com/pascalgn/dbmigration</url>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Pascal</name>
            <email>pascalgn@users.noreply.github.com</email>
            <organizationUrl>https://github.com/pascalgn</organizationUrl>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:https://github.com/pascalgn/dbmigration.git</connection>
        <developerConnection>scm:git:ssh://github.com:pascalgn/dbmigration.git</developerConnection>
        <url>https://github.com/pascalgn/dbmigration</url>
    </scm>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <skipITs>false</skipITs>

        <kotlin.version>1.1.2</kotlin.version>
        <slf4j.version>1.7.21</slf4j.version>

        <maven-surefire-plugin.version>2.20</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>2.20</maven-failsafe-plugin.version>
        <maven-checkstyle-plugin.version>2.17</maven-checkstyle-plugin.version>
        <maven-antrun-plugin.version>1.7</maven-antrun-plugin.version>
        <docker-maven-plugin.version>0.21.0</docker-maven-plugin.version>
        <license-maven-plugin.version>3.0</license-maven-plugin.version>

        <ktlint.version>0.8.1</ktlint.version>
    </properties>

    <build>
        <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
        <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>

        <plugins>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-failsafe-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <systemPropertiesFile>${project.build.directory}/ports.properties</systemPropertiesFile>
                    <trimStackTrace>false</trimStackTrace>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>build-images</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>start-container</id>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop-container</id>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skip>${skipITs}</skip>
                    <images>
                        <image>
                            <name>dbmigration/sql-server:latest</name>
                            <build>
                                <dockerFileDir>${project.basedir}/src/test/docker</dockerFileDir>
                            </build>
                            <run>
                                <portPropertyFile>${project.build.directory}/ports.properties</portPropertyFile>
                                <ports>
                                    <port>+sqlserver.host:sqlserver.port:1433</port>
                                </ports>
                                <wait>
                                    <log>Recovery is complete</log>
                                    <time>30000</time>
                                </wait>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>${maven-antrun-plugin.version}</version>
                <executions>
                    <execution>
                        <id>kotlin-lint</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>verify</phase>
                        <configuration>
                            <target name="kotlin-lint">
                                <java taskname="kotlin-lint" dir="${project.basedir}" fork="true" failonerror="true"
                                      classname="com.github.shyiko.ktlint.Main" classpathref="maven.plugin.classpath">
                                    <arg value="src/**/*.kt"/>
                                </java>
                            </target>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>com.github.shyiko</groupId>
                        <artifactId>ktlint</artifactId>
                        <version>${ktlint.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>${license-maven-plugin.version}</version>
                <configuration>
                    <header>${project.basedir}/header.txt</header>
                    <strictCheck>true</strictCheck>
                    <failIfUnknown>true</failIfUnknown>
                    <mapping>
                        <kt>SLASHSTAR_STYLE</kt>
                    </mapping>
                    <excludes>
                        <exclude>.*</exclude>
                        <exclude>LICENSE</exclude>
                        <exclude>src/main/resources/**/*.properties</exclude>
                        <exclude>src/test/resources/**</exclude>
                        <exclude>src/test/docker/*</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>check-licenses</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jre8</artifactId>
            <version>${kotlin.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>com.microsoft.sqlserver</groupId>
            <artifactId>mssql-jdbc</artifactId>
            <version>6.1.0.jre8</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.4.192</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
